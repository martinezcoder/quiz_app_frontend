{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/QuestionBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/QuestionBox.vue","mtime":1564827387000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/app/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from 'lodash';\nexport default {\n  props: {\n    currentQuestion: Object,\n    next: Function,\n    increment: Function\n  },\n  data: function data() {\n    return {\n      selectedIndex: null,\n      correctIndex: null,\n      shuffledAnswers: [],\n      answered: false\n    };\n  },\n  watch: {\n    currentQuestion: {\n      immediate: true,\n      handler: function handler() {\n        this.selectedIndex = null;\n        this.answered = false;\n        this.shuffleAnswers();\n      }\n    }\n  },\n  methods: {\n    selectAnswer: function selectAnswer(index) {\n      this.selectedIndex = index;\n    },\n    submitAnswer: function submitAnswer() {\n      var isCorrect = false;\n\n      if (this.selectedIndex == this.correctIndex) {\n        isCorrect = true;\n      }\n\n      this.answered = true;\n      this.increment(isCorrect);\n    },\n    shuffleAnswers: function shuffleAnswers() {\n      var answers = [].concat(_toConsumableArray(this.currentQuestion.incorrect_answers), [this.currentQuestion.correct_answer]);\n      this.shuffledAnswers = _.shuffle(answers);\n      this.correctIndex = this.shuffledAnswers.indexOf(this.currentQuestion.correct_answer);\n    },\n    answerClass: function answerClass(index) {\n      var answerClass = '';\n\n      if (!this.answered && this.selectedIndex === index) {\n        answerClass = 'selected';\n      } else if (this.answered && this.correctIndex === index) {\n        answerClass = 'correct';\n      } else if (this.answered && this.selectedIndex === index && this.correctIndex !== index) {\n        answerClass = 'incorrect';\n      }\n\n      return answerClass;\n    }\n  }\n};",{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,OAAA,CAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA,MADA;AAEA,IAAA,IAAA,EAAA,QAFA;AAGA,IAAA,SAAA,EAAA;AAHA,GADA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,IADA;AAEA,MAAA,YAAA,EAAA,IAFA;AAGA,MAAA,eAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA;AAJA,KAAA;AAMA,GAbA;AAcA,EAAA,KAAA,EAAA;AACA,IAAA,eAAA,EAAA;AACA,MAAA,SAAA,EAAA,IADA;AAEA,MAAA,OAFA,qBAEA;AACA,aAAA,aAAA,GAAA,IAAA;AACA,aAAA,QAAA,GAAA,KAAA;AACA,aAAA,cAAA;AACA;AANA;AADA,GAdA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,KADA,EACA;AACA,WAAA,aAAA,GAAA,KAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AACA,UAAA,SAAA,GAAA,KAAA;;AAEA,UAAA,KAAA,aAAA,IAAA,KAAA,YAAA,EAAA;AACA,QAAA,SAAA,GAAA,IAAA;AACA;;AACA,WAAA,QAAA,GAAA,IAAA;AAEA,WAAA,SAAA,CAAA,SAAA;AACA,KAbA;AAcA,IAAA,cAdA,4BAcA;AACA,UAAA,OAAA,gCAAA,KAAA,eAAA,CAAA,iBAAA,IAAA,KAAA,eAAA,CAAA,cAAA,EAAA;AACA,WAAA,eAAA,GAAA,CAAA,CAAA,OAAA,CAAA,OAAA,CAAA;AACA,WAAA,YAAA,GAAA,KAAA,eAAA,CAAA,OAAA,CAAA,KAAA,eAAA,CAAA,cAAA,CAAA;AACA,KAlBA;AAmBA,IAAA,WAnBA,uBAmBA,KAnBA,EAmBA;AACA,UAAA,WAAA,GAAA,EAAA;;AAEA,UAAA,CAAA,KAAA,QAAA,IAAA,KAAA,aAAA,KAAA,KAAA,EAAA;AACA,QAAA,WAAA,GAAA,UAAA;AACA,OAFA,MAEA,IAAA,KAAA,QAAA,IAAA,KAAA,YAAA,KAAA,KAAA,EAAA;AACA,QAAA,WAAA,GAAA,SAAA;AACA,OAFA,MAEA,IAAA,KAAA,QAAA,IACA,KAAA,aAAA,KAAA,KADA,IAEA,KAAA,YAAA,KAAA,KAFA,EAGA;AACA,QAAA,WAAA,GAAA,WAAA;AACA;;AAEA,aAAA,WAAA;AACA;AAlCA;AAxBA,CAAA","sourcesContent":["<template>\n  <div class=\"question-box-container\">\n    <b-jumbotron>\n      <template slot=\"lead\">\n        {{ currentQuestion.question }}\n      </template>\n\n      <hr class=\"my-4\">\n\n      <b-list-group>\n        <b-list-group-item\n          v-for=\"(answer, index) in shuffledAnswers\"\n          :key=\"index\"\n          @click.prevent=\"selectAnswer(index)\"\n          :class=\"answerClass(index)\"\n        >\n          {{ answer }}\n        </b-list-group-item>\n      </b-list-group>\n\n      <b-button\n        variant=\"primary\"\n        @click=\"submitAnswer\"\n        :disabled=\"selectedIndex === null || answered\"\n      >\n        Submit\n      </b-button>\n      <b-button @click=\"next\" variant=\"success\" href=\"#\">\n        Next\n      </b-button>\n    </b-jumbotron>\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash'\n\nexport default {\n  props: {\n    currentQuestion: Object,\n    next: Function,\n    increment: Function\n  },\n  data() {\n    return {\n      selectedIndex: null,\n      correctIndex: null,\n      shuffledAnswers: [],\n      answered: false\n    }\n  },\n  watch: {\n    currentQuestion: {\n      immediate: true,\n      handler() {\n        this.selectedIndex = null\n        this.answered = false\n        this.shuffleAnswers()\n      }\n    }\n  },\n  methods: {\n    selectAnswer(index) {\n      this.selectedIndex = index\n    },\n    submitAnswer() {\n      let isCorrect = false\n\n      if (this.selectedIndex == this.correctIndex) {\n        isCorrect = true\n      }\n      this.answered = true\n\n      this.increment(isCorrect)\n    },\n    shuffleAnswers() {\n      let answers = [...this.currentQuestion.incorrect_answers, this.currentQuestion.correct_answer]\n      this.shuffledAnswers = _.shuffle(answers)\n      this.correctIndex = this.shuffledAnswers.indexOf(this.currentQuestion.correct_answer)\n    },\n    answerClass(index) {\n      let answerClass = ''\n\n      if (!this.answered && this.selectedIndex === index) {\n        answerClass = 'selected'\n      } else if (this.answered && this.correctIndex === index) {\n        answerClass = 'correct'\n      } else if (this.answered &&\n        this.selectedIndex === index &&\n        this.correctIndex !== index\n      ) {\n        answerClass = 'incorrect'\n      }\n\n      return answerClass\n    }\n  }\n}\n</script>\n\n<style scoped>\n.list-group {\n  margin-bottom: 15px;\n}\n\n.list-group-item:hover {\n  background: #EEE;\n  cursor: pointer;\n}\n\n.btn {\n  margin: 0 5px;\n}\n\n.selected {\n  background-color: lightblue;\n}\n\n.correct {\n  background-color: lightgreen;\n}\n\n.incorrect {\n  background-color: red;\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}